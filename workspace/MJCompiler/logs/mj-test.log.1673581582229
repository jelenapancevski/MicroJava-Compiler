INFO  04:44:51,691 - Compiling source file: C:\Users\Dell\Desktop\PP1\Projekat januarski rok\Compiler\workspace\MJCompiler\test\test.mj
INFO  04:44:51,749 - #2 program
INFO  04:44:51,749 - #47 test
INFO  04:44:51,749 - #5 const
INFO  04:44:51,750 - #47 int
INFO  04:44:51,750 - #47 nula
INFO  04:44:51,751 - #19 =
INFO  04:44:51,751 - #49 0
INFO  04:44:51,751 - #7 ;
INFO  04:44:51,752 - #5 const
INFO  04:44:51,753 - #47 int
INFO  04:44:51,753 - #47 jedan
INFO  04:44:51,753 - #19 =
INFO  04:44:51,753 - #49 1
INFO  04:44:51,753 - #7 ;
INFO  04:44:51,753 - #5 const
INFO  04:44:51,753 - #47 int
INFO  04:44:51,754 - #47 pet
INFO  04:44:51,754 - #19 =
INFO  04:44:51,754 - #49 5
INFO  04:44:51,754 - #7 ;
INFO  04:44:51,754 - #5 const
INFO  04:44:51,755 - #47 bool
INFO  04:44:51,755 - #47 isok
INFO  04:44:51,755 - #19 =
INFO  04:44:51,755 - #50 true
INFO  04:44:51,755 - #15 ,
INFO  04:44:51,756 - #47 notok
INFO  04:44:51,756 - #19 =
INFO  04:44:51,756 - #50 false
INFO  04:44:51,756 - #7 ;
INFO  04:44:51,757 - #5 const
INFO  04:44:51,757 - #47 char
INFO  04:44:51,757 - #47 chara
INFO  04:44:51,757 - #19 =
INFO  04:44:51,757 - #48 a
INFO  04:44:51,758 - #7 ;
INFO  04:44:51,758 - #47 int
INFO  04:44:51,758 - #47 niz
INFO  04:44:51,758 - #17 [
INFO  04:44:51,758 - #18 ]
INFO  04:44:51,758 - #15 ,
INFO  04:44:51,760 - #47 niz2
INFO  04:44:51,760 - #17 [
INFO  04:44:51,760 - #18 ]
INFO  04:44:51,761 - #15 ,
INFO  04:44:51,761 - #47 a
INFO  04:44:51,761 - #15 ,
INFO  04:44:51,762 - #47 b
INFO  04:44:51,762 - #7 ;
INFO  04:44:51,762 - #47 int
INFO  04:44:51,763 - #47 length1
INFO  04:44:51,763 - #15 ,
INFO  04:44:51,763 - #47 length2
INFO  04:44:51,763 - #7 ;
INFO  04:44:51,763 - #47 char
INFO  04:44:51,763 - #47 nizch
INFO  04:44:51,764 - #17 [
INFO  04:44:51,764 - #18 ]
INFO  04:44:51,764 - #7 ;
INFO  04:44:51,764 - #3 {
INFO  04:44:51,764 - #47 bool
INFO  04:44:51,765 - #47 isequal
INFO  04:44:51,765 - #13 (
INFO  04:44:51,766 - #47 int
INFO  04:44:51,766 - #47 arr1
INFO  04:44:51,766 - #17 [
INFO  04:44:51,766 - #18 ]
INFO  04:44:51,766 - #15 ,
INFO  04:44:51,766 - #47 int
INFO  04:44:51,767 - #47 arr2
INFO  04:44:51,767 - #17 [
INFO  04:44:51,767 - #18 ]
INFO  04:44:51,767 - #14 )
INFO  04:44:51,767 - #47 bool
INFO  04:44:51,768 - #47 isequal
INFO  04:44:51,768 - #7 ;
INFO  04:44:51,768 - #3 {
INFO  04:44:51,769 - #33 if
INFO  04:44:51,770 - #13 (
INFO  04:44:51,771 - #47 arr1
INFO  04:44:51,771 - #20 ==
INFO  04:44:51,772 - #47 arr2
INFO  04:44:51,773 - #14 )
INFO  04:44:51,774 - #47 isequal
INFO  04:44:51,775 - #19 =
INFO  04:44:51,775 - #50 true
INFO  04:44:51,775 - #7 ;
INFO  04:44:51,776 - #34 else
INFO  04:44:51,776 - #47 isequal
INFO  04:44:51,777 - #19 =
INFO  04:44:51,777 - #50 false
INFO  04:44:51,777 - #7 ;
INFO  04:44:51,777 - #38 return
INFO  04:44:51,779 - #47 isequal
INFO  04:44:51,779 - #7 ;
INFO  04:44:51,779 - #4 }
INFO  04:44:51,779 - #6 void
INFO  04:44:51,781 - #47 printintarray
INFO  04:44:51,781 - #13 (
INFO  04:44:51,781 - #47 int
INFO  04:44:51,783 - #47 array
INFO  04:44:51,783 - #17 [
INFO  04:44:51,783 - #18 ]
INFO  04:44:51,783 - #14 )
INFO  04:44:51,783 - #47 int
INFO  04:44:51,783 - #47 arr
INFO  04:44:51,783 - #7 ;
INFO  04:44:51,783 - #3 {
INFO  04:44:51,783 - #47 array
INFO  04:44:51,783 - #16 .
INFO  04:44:51,784 - #39 foreach
INFO  04:44:51,784 - #13 (
INFO  04:44:51,784 - #47 arr
INFO  04:44:51,784 - #40 =>
INFO  04:44:51,784 - #3 {
INFO  04:44:51,784 - #9 print
INFO  04:44:51,785 - #13 (
INFO  04:44:51,785 - #47 arr
INFO  04:44:51,785 - #14 )
INFO  04:44:51,786 - #7 ;
INFO  04:44:51,786 - #4 }
INFO  04:44:51,786 - #14 )
INFO  04:44:51,787 - #7 ;
INFO  04:44:51,787 - #4 }
INFO  04:44:51,787 - #6 void
INFO  04:44:51,787 - #47 printchararray
INFO  04:44:51,787 - #13 (
INFO  04:44:51,787 - #47 char
INFO  04:44:51,787 - #47 array
INFO  04:44:51,788 - #17 [
INFO  04:44:51,788 - #18 ]
INFO  04:44:51,788 - #14 )
INFO  04:44:51,788 - #47 char
INFO  04:44:51,788 - #47 arr
INFO  04:44:51,788 - #7 ;
INFO  04:44:51,788 - #3 {
INFO  04:44:51,788 - #47 array
INFO  04:44:51,788 - #16 .
INFO  04:44:51,788 - #39 foreach
INFO  04:44:51,788 - #13 (
INFO  04:44:51,788 - #47 arr
INFO  04:44:51,788 - #40 =>
INFO  04:44:51,788 - #3 {
INFO  04:44:51,789 - #9 print
INFO  04:44:51,789 - #13 (
INFO  04:44:51,789 - #47 arr
INFO  04:44:51,789 - #15 ,
INFO  04:44:51,789 - #49 2
INFO  04:44:51,789 - #14 )
INFO  04:44:51,789 - #7 ;
INFO  04:44:51,789 - #4 }
INFO  04:44:51,789 - #14 )
INFO  04:44:51,789 - #7 ;
INFO  04:44:51,789 - #4 }
INFO  04:44:51,789 - #6 void
INFO  04:44:51,790 - #47 printmsg
INFO  04:44:51,790 - #13 (
INFO  04:44:51,790 - #47 char
INFO  04:44:51,790 - #47 msg
INFO  04:44:51,790 - #17 [
INFO  04:44:51,790 - #18 ]
INFO  04:44:51,790 - #15 ,
INFO  04:44:51,790 - #47 int
INFO  04:44:51,790 - #47 len
INFO  04:44:51,790 - #14 )
INFO  04:44:51,790 - #47 int
INFO  04:44:51,790 - #47 cnt
INFO  04:44:51,790 - #7 ;
INFO  04:44:51,790 - #3 {
INFO  04:44:51,790 - #47 cnt
INFO  04:44:51,790 - #19 =
INFO  04:44:51,791 - #49 0
INFO  04:44:51,791 - #7 ;
INFO  04:44:51,791 - #35 while
INFO  04:44:51,791 - #13 (
INFO  04:44:51,792 - #47 cnt
INFO  04:44:51,792 - #24 <
INFO  04:44:51,792 - #47 len
INFO  04:44:51,793 - #14 )
INFO  04:44:51,793 - #3 {
INFO  04:44:51,793 - #9 print
INFO  04:44:51,793 - #13 (
INFO  04:44:51,793 - #47 msg
INFO  04:44:51,793 - #17 [
INFO  04:44:51,794 - #47 cnt
INFO  04:44:51,794 - #18 ]
INFO  04:44:51,794 - #14 )
INFO  04:44:51,794 - #7 ;
INFO  04:44:51,794 - #47 cnt
INFO  04:44:51,794 - #10 ++
INFO  04:44:51,794 - #7 ;
INFO  04:44:51,795 - #4 }
INFO  04:44:51,795 - #4 }
INFO  04:44:51,795 - #6 void
INFO  04:44:51,795 - #47 main
INFO  04:44:51,795 - #13 (
INFO  04:44:51,795 - #14 )
INFO  04:44:51,796 - #47 int
INFO  04:44:51,796 - #47 bodovi
INFO  04:44:51,796 - #7 ;
INFO  04:44:51,796 - #47 int
INFO  04:44:51,796 - #47 counter
INFO  04:44:51,796 - #7 ;
INFO  04:44:51,796 - #47 int
INFO  04:44:51,796 - #47 arr
INFO  04:44:51,796 - #7 ;
INFO  04:44:51,796 - #47 char
INFO  04:44:51,796 - #47 message
INFO  04:44:51,796 - #17 [
INFO  04:44:51,797 - #18 ]
INFO  04:44:51,797 - #7 ;
INFO  04:44:51,797 - #3 {
INFO  04:44:51,797 - #8 read
INFO  04:44:51,797 - #13 (
INFO  04:44:51,797 - #47 length1
INFO  04:44:51,797 - #14 )
INFO  04:44:51,797 - #7 ;
INFO  04:44:51,797 - #8 read
INFO  04:44:51,797 - #13 (
INFO  04:44:51,797 - #47 length2
INFO  04:44:51,797 - #14 )
INFO  04:44:51,797 - #7 ;
INFO  04:44:51,797 - #47 niz
INFO  04:44:51,797 - #19 =
INFO  04:44:51,798 - #12 new
INFO  04:44:51,798 - #47 int
INFO  04:44:51,798 - #17 [
INFO  04:44:51,798 - #47 length1
INFO  04:44:51,798 - #18 ]
INFO  04:44:51,798 - #7 ;
INFO  04:44:51,798 - #47 niz2
INFO  04:44:51,798 - #19 =
INFO  04:44:51,798 - #12 new
INFO  04:44:51,798 - #47 int
INFO  04:44:51,798 - #17 [
INFO  04:44:51,798 - #47 length2
INFO  04:44:51,798 - #18 ]
INFO  04:44:51,798 - #7 ;
INFO  04:44:51,799 - #47 message
INFO  04:44:51,799 - #19 =
INFO  04:44:51,799 - #12 new
INFO  04:44:51,799 - #47 char
INFO  04:44:51,799 - #17 [
INFO  04:44:51,799 - #49 10
INFO  04:44:51,799 - #18 ]
INFO  04:44:51,799 - #7 ;
INFO  04:44:51,799 - #47 counter
INFO  04:44:51,799 - #19 =
INFO  04:44:51,799 - #49 0
INFO  04:44:51,799 - #7 ;
INFO  04:44:51,799 - #47 a
INFO  04:44:51,799 - #19 =
INFO  04:44:51,799 - #47 ord
INFO  04:44:51,799 - #13 (
INFO  04:44:51,800 - #47 chara
INFO  04:44:51,801 - #14 )
INFO  04:44:51,801 - #7 ;
INFO  04:44:51,801 - #35 while
INFO  04:44:51,801 - #13 (
INFO  04:44:51,802 - #47 counter
INFO  04:44:51,802 - #24 <
INFO  04:44:51,802 - #47 len
INFO  04:44:51,802 - #13 (
INFO  04:44:51,802 - #47 niz
INFO  04:44:51,802 - #14 )
INFO  04:44:51,802 - #14 )
INFO  04:44:51,802 - #3 {
INFO  04:44:51,802 - #47 niz
INFO  04:44:51,802 - #17 [
INFO  04:44:51,802 - #47 counter
INFO  04:44:51,802 - #18 ]
INFO  04:44:51,802 - #19 =
INFO  04:44:51,802 - #47 a
INFO  04:44:51,802 - #7 ;
INFO  04:44:51,802 - #47 a
INFO  04:44:51,803 - #10 ++
INFO  04:44:51,803 - #7 ;
INFO  04:44:51,803 - #47 counter
INFO  04:44:51,803 - #10 ++
INFO  04:44:51,803 - #7 ;
INFO  04:44:51,803 - #4 }
INFO  04:44:51,803 - #47 message
INFO  04:44:51,803 - #17 [
INFO  04:44:51,803 - #49 0
INFO  04:44:51,803 - #18 ]
INFO  04:44:51,803 - #19 =
INFO  04:44:51,803 - #48 n
INFO  04:44:51,803 - #7 ;
INFO  04:44:51,803 - #47 message
INFO  04:44:51,803 - #17 [
INFO  04:44:51,803 - #49 1
INFO  04:44:51,803 - #18 ]
INFO  04:44:51,803 - #19 =
INFO  04:44:51,803 - #48 i
INFO  04:44:51,803 - #7 ;
INFO  04:44:51,804 - #47 message
INFO  04:44:51,804 - #17 [
INFO  04:44:51,804 - #49 2
INFO  04:44:51,804 - #18 ]
INFO  04:44:51,804 - #19 =
INFO  04:44:51,804 - #48 z
INFO  04:44:51,804 - #7 ;
INFO  04:44:51,804 - #47 printmsg
INFO  04:44:51,804 - #13 (
INFO  04:44:51,804 - #47 message
INFO  04:44:51,804 - #15 ,
INFO  04:44:51,804 - #49 3
INFO  04:44:51,804 - #14 )
INFO  04:44:51,805 - #7 ;
INFO  04:44:51,805 - #9 print
INFO  04:44:51,805 - #13 (
INFO  04:44:51,805 - #14 )
ERROR 04:44:51,805 - 
Sintaksna greska na liniji 67
INFO  04:44:51,805 - #7 ;
INFO  04:44:51,805 - #47 niz
INFO  04:44:51,805 - #16 .
INFO  04:44:51,806 - #39 foreach
INFO  04:44:51,806 - #13 (
INFO  04:44:51,806 - #47 arr
INFO  04:44:51,806 - #40 =>
INFO  04:44:51,806 - #3 {
INFO  04:44:51,807 - #9 print
INFO  04:44:51,807 - #13 (
INFO  04:44:51,807 - #47 chr
INFO  04:44:51,807 - #13 (
INFO  04:44:51,807 - #47 arr
INFO  04:44:51,807 - #14 )
INFO  04:44:51,807 - #14 )
INFO  04:44:51,807 - #7 ;
INFO  04:44:51,807 - #4 }
INFO  04:44:51,807 - #14 )
INFO  04:44:51,807 - #7 ;
INFO  04:44:51,807 - #9 print
INFO  04:44:51,807 - #13 (
INFO  04:44:51,807 - #47 eol
INFO  04:44:51,807 - #14 )
INFO  04:44:51,807 - #7 ;
INFO  04:44:51,807 - #47 b
INFO  04:44:51,807 - #19 =
INFO  04:44:51,807 - #49 100
INFO  04:44:51,807 - #7 ;
INFO  04:44:51,807 - #47 counter
INFO  04:44:51,807 - #11 --
INFO  04:44:51,807 - #7 ;
INFO  04:44:51,807 - #35 while
INFO  04:44:51,807 - #13 (
INFO  04:44:51,807 - #47 counter
INFO  04:44:51,808 - #23 >=
INFO  04:44:51,808 - #49 0
INFO  04:44:51,808 - #14 )
INFO  04:44:51,808 - #3 {
INFO  04:44:51,808 - #47 niz2
INFO  04:44:51,808 - #17 [
ERROR 04:44:51,808 - Greska kod deklaracije formalnog parametra funkcije. 
INFO  04:44:51,808 - #47 counter
INFO  04:44:51,808 - #18 ]
INFO  04:44:51,808 - #19 =
INFO  04:44:51,808 - #47 b
INFO  04:44:51,809 - #7 ;
INFO  04:44:51,809 - #47 b
INFO  04:44:51,809 - #10 ++
INFO  04:44:51,809 - #7 ;
INFO  04:44:51,809 - #47 counter
INFO  04:44:51,809 - #11 --
INFO  04:44:51,809 - #7 ;
INFO  04:44:51,809 - #4 }
INFO  04:44:51,809 - #47 message
INFO  04:44:51,809 - #17 [
ERROR 04:44:51,809 - 
Sintaksna greska na liniji 79
ERROR 04:44:51,809 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 79
