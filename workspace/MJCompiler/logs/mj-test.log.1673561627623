INFO  23:12:52,017 - Compiling source file: C:\Users\Dell\Desktop\PP1\Projekat januarski rok\Compiler\workspace\MJCompiler\test\semanticerrors\loops.mj
INFO  23:12:52,069 - #2 program
INFO  23:12:52,069 - #47 loops
INFO  23:12:52,069 - #5 const
INFO  23:12:52,070 - #47 int
INFO  23:12:52,070 - #47 nula
INFO  23:12:52,071 - #19 =
INFO  23:12:52,071 - #49 0
INFO  23:12:52,071 - #15 ,
INFO  23:12:52,072 - #47 jedan
INFO  23:12:52,072 - #19 =
INFO  23:12:52,072 - #49 1
INFO  23:12:52,072 - #15 ,
INFO  23:12:52,072 - #47 pet
INFO  23:12:52,072 - #19 =
INFO  23:12:52,073 - #49 5
INFO  23:12:52,073 - #7 ;
INFO  23:12:52,073 - #5 const
INFO  23:12:52,073 - #47 bool
INFO  23:12:52,074 - #47 radi
INFO  23:12:52,074 - #19 =
INFO  23:12:52,074 - #50 true
INFO  23:12:52,074 - #7 ;
INFO  23:12:52,074 - #5 const
INFO  23:12:52,074 - #47 char
INFO  23:12:52,074 - #47 slovoa
INFO  23:12:52,074 - #19 =
INFO  23:12:52,074 - #48 a
INFO  23:12:52,074 - #7 ;
INFO  23:12:52,075 - #5 const
INFO  23:12:52,075 - #47 char
INFO  23:12:52,075 - #47 slovob
INFO  23:12:52,075 - #19 =
INFO  23:12:52,075 - #48 b
INFO  23:12:52,075 - #7 ;
INFO  23:12:52,075 - #47 int
INFO  23:12:52,075 - #47 niz
INFO  23:12:52,075 - #17 [
INFO  23:12:52,075 - #18 ]
INFO  23:12:52,075 - #15 ,
INFO  23:12:52,076 - #47 niz2
INFO  23:12:52,077 - #17 [
INFO  23:12:52,077 - #18 ]
INFO  23:12:52,077 - #15 ,
INFO  23:12:52,077 - #47 a
INFO  23:12:52,077 - #15 ,
INFO  23:12:52,078 - #47 b
INFO  23:12:52,078 - #7 ;
INFO  23:12:52,078 - #47 char
INFO  23:12:52,078 - #47 nizch
INFO  23:12:52,078 - #17 [
INFO  23:12:52,078 - #18 ]
INFO  23:12:52,078 - #7 ;
INFO  23:12:52,078 - #47 bool
INFO  23:12:52,078 - #47 isok
INFO  23:12:52,079 - #7 ;
INFO  23:12:52,079 - #3 {
INFO  23:12:52,079 - #47 int
INFO  23:12:52,079 - #47 sum
INFO  23:12:52,079 - #13 (
INFO  23:12:52,079 - #47 int
INFO  23:12:52,080 - #47 a
INFO  23:12:52,080 - #15 ,
INFO  23:12:52,080 - #47 int
INFO  23:12:52,080 - #47 b
INFO  23:12:52,080 - #14 )
INFO  23:12:52,080 - #47 int
INFO  23:12:52,081 - #47 c
INFO  23:12:52,081 - #7 ;
INFO  23:12:52,081 - #3 {
INFO  23:12:52,081 - #47 c
INFO  23:12:52,082 - #19 =
INFO  23:12:52,082 - #47 a
INFO  23:12:52,082 - #28 +
INFO  23:12:52,082 - #47 b
INFO  23:12:52,083 - #7 ;
INFO  23:12:52,083 - #38 return
INFO  23:12:52,084 - #47 c
INFO  23:12:52,084 - #7 ;
INFO  23:12:52,084 - #4 }
INFO  23:12:52,084 - #47 int
INFO  23:12:52,084 - #47 funca
INFO  23:12:52,084 - #13 (
INFO  23:12:52,085 - #47 char
INFO  23:12:52,085 - #47 a
INFO  23:12:52,085 - #15 ,
INFO  23:12:52,085 - #47 char
INFO  23:12:52,085 - #47 b
INFO  23:12:52,085 - #14 )
INFO  23:12:52,085 - #3 {
INFO  23:12:52,085 - #47 niz
INFO  23:12:52,085 - #19 =
INFO  23:12:52,085 - #12 new
INFO  23:12:52,085 - #47 int
INFO  23:12:52,085 - #17 [
INFO  23:12:52,085 - #49 5
INFO  23:12:52,085 - #18 ]
INFO  23:12:52,085 - #7 ;
INFO  23:12:52,085 - #47 niz2
INFO  23:12:52,085 - #19 =
INFO  23:12:52,086 - #12 new
INFO  23:12:52,086 - #47 int
INFO  23:12:52,086 - #17 [
INFO  23:12:52,086 - #47 slovoa
INFO  23:12:52,086 - #18 ]
INFO  23:12:52,086 - #7 ;
INFO  23:12:52,086 - #47 nizch
INFO  23:12:52,086 - #19 =
INFO  23:12:52,086 - #12 new
INFO  23:12:52,086 - #47 int
INFO  23:12:52,086 - #17 [
INFO  23:12:52,086 - #49 10
INFO  23:12:52,086 - #18 ]
INFO  23:12:52,086 - #7 ;
INFO  23:12:52,086 - #9 print
INFO  23:12:52,086 - #13 (
INFO  23:12:52,086 - #47 a
INFO  23:12:52,087 - #14 )
INFO  23:12:52,087 - #7 ;
INFO  23:12:52,087 - #9 print
INFO  23:12:52,087 - #13 (
INFO  23:12:52,087 - #47 b
INFO  23:12:52,087 - #14 )
INFO  23:12:52,087 - #7 ;
INFO  23:12:52,087 - #38 return
INFO  23:12:52,087 - #49 1
INFO  23:12:52,088 - #7 ;
INFO  23:12:52,088 - #4 }
INFO  23:12:52,088 - #6 void
INFO  23:12:52,088 - #47 foreachfunc
INFO  23:12:52,088 - #13 (
INFO  23:12:52,088 - #14 )
INFO  23:12:52,089 - #47 int
INFO  23:12:52,089 - #47 broj
INFO  23:12:52,089 - #7 ;
INFO  23:12:52,089 - #47 char
INFO  23:12:52,089 - #47 slovo
INFO  23:12:52,089 - #7 ;
INFO  23:12:52,089 - #3 {
INFO  23:12:52,089 - #47 slovo
INFO  23:12:52,089 - #16 .
INFO  23:12:52,089 - #39 foreach
INFO  23:12:52,090 - #13 (
INFO  23:12:52,090 - #47 slovoa
INFO  23:12:52,090 - #40 =>
INFO  23:12:52,090 - #9 print
INFO  23:12:52,090 - #13 (
INFO  23:12:52,090 - #47 slovo
INFO  23:12:52,090 - #14 )
INFO  23:12:52,090 - #7 ;
INFO  23:12:52,090 - #14 )
INFO  23:12:52,091 - #7 ;
INFO  23:12:52,091 - #47 niz
INFO  23:12:52,091 - #16 .
INFO  23:12:52,091 - #39 foreach
INFO  23:12:52,091 - #13 (
INFO  23:12:52,091 - #47 broj
INFO  23:12:52,091 - #40 =>
INFO  23:12:52,091 - #3 {
INFO  23:12:52,091 - #9 print
INFO  23:12:52,092 - #13 (
INFO  23:12:52,092 - #47 broj
INFO  23:12:52,092 - #14 )
INFO  23:12:52,092 - #7 ;
INFO  23:12:52,092 - #4 }
INFO  23:12:52,093 - #14 )
INFO  23:12:52,094 - #7 ;
INFO  23:12:52,094 - #47 nizch
INFO  23:12:52,094 - #16 .
INFO  23:12:52,094 - #39 foreach
INFO  23:12:52,094 - #13 (
INFO  23:12:52,094 - #47 slovo
INFO  23:12:52,094 - #40 =>
INFO  23:12:52,094 - #3 {
INFO  23:12:52,094 - #33 if
INFO  23:12:52,094 - #13 (
INFO  23:12:52,095 - #47 slovo
INFO  23:12:52,095 - #20 ==
INFO  23:12:52,095 - #48 d
INFO  23:12:52,096 - #14 )
INFO  23:12:52,096 - #37 continue
INFO  23:12:52,097 - #7 ;
INFO  23:12:52,097 - #9 print
INFO  23:12:52,097 - #13 (
INFO  23:12:52,098 - #47 slovo
INFO  23:12:52,098 - #15 ,
INFO  23:12:52,098 - #49 2
INFO  23:12:52,098 - #14 )
INFO  23:12:52,098 - #7 ;
INFO  23:12:52,098 - #33 if
INFO  23:12:52,098 - #13 (
INFO  23:12:52,098 - #47 slovo
INFO  23:12:52,098 - #20 ==
INFO  23:12:52,098 - #48 a
INFO  23:12:52,098 - #14 )
INFO  23:12:52,098 - #36 break
INFO  23:12:52,098 - #7 ;
INFO  23:12:52,098 - #4 }
INFO  23:12:52,099 - #14 )
INFO  23:12:52,099 - #7 ;
INFO  23:12:52,099 - #47 niz
INFO  23:12:52,099 - #16 .
INFO  23:12:52,099 - #39 foreach
INFO  23:12:52,099 - #13 (
INFO  23:12:52,099 - #47 slovo
INFO  23:12:52,099 - #40 =>
INFO  23:12:52,099 - #3 {
INFO  23:12:52,099 - #9 print
INFO  23:12:52,099 - #13 (
INFO  23:12:52,099 - #47 slovo
INFO  23:12:52,099 - #14 )
INFO  23:12:52,099 - #7 ;
INFO  23:12:52,099 - #4 }
INFO  23:12:52,099 - #14 )
INFO  23:12:52,099 - #7 ;
INFO  23:12:52,099 - #4 }
INFO  23:12:52,099 - #6 void
INFO  23:12:52,100 - #47 main
INFO  23:12:52,100 - #13 (
INFO  23:12:52,100 - #14 )
INFO  23:12:52,100 - #47 int
INFO  23:12:52,100 - #47 bodovi
INFO  23:12:52,100 - #7 ;
INFO  23:12:52,100 - #47 bool
INFO  23:12:52,100 - #47 bt
INFO  23:12:52,100 - #7 ;
INFO  23:12:52,100 - #47 char
INFO  23:12:52,100 - #47 slovo
INFO  23:12:52,100 - #7 ;
INFO  23:12:52,100 - #47 int
INFO  23:12:52,100 - #47 broj
INFO  23:12:52,100 - #7 ;
INFO  23:12:52,100 - #3 {
INFO  23:12:52,100 - #35 while
INFO  23:12:52,100 - #13 (
INFO  23:12:52,101 - #47 slovoa
INFO  23:12:52,101 - #22 >
INFO  23:12:52,101 - #47 slovob
INFO  23:12:52,102 - #14 )
INFO  23:12:52,102 - #3 {
INFO  23:12:52,102 - #47 a
INFO  23:12:52,102 - #19 =
INFO  23:12:52,102 - #47 a
INFO  23:12:52,102 - #28 +
INFO  23:12:52,102 - #49 5
INFO  23:12:52,102 - #7 ;
INFO  23:12:52,102 - #33 if
INFO  23:12:52,102 - #13 (
INFO  23:12:52,102 - #47 a
INFO  23:12:52,102 - #22 >
INFO  23:12:52,102 - #49 7
INFO  23:12:52,102 - #14 )
INFO  23:12:52,102 - #36 break
INFO  23:12:52,102 - #7 ;
INFO  23:12:52,102 - #4 }
INFO  23:12:52,102 - #35 while
INFO  23:12:52,104 - #13 (
INFO  23:12:52,104 - #49 5
INFO  23:12:52,104 - #29 -
INFO  23:12:52,104 - #49 7
INFO  23:12:52,105 - #14 )
INFO  23:12:52,105 - #3 {
INFO  23:12:52,105 - #47 a
INFO  23:12:52,105 - #19 =
INFO  23:12:52,105 - #47 a
INFO  23:12:52,105 - #29 -
INFO  23:12:52,105 - #49 2
INFO  23:12:52,105 - #7 ;
INFO  23:12:52,105 - #4 }
INFO  23:12:52,105 - #47 foreachfunc
INFO  23:12:52,105 - #13 (
INFO  23:12:52,106 - #14 )
INFO  23:12:52,106 - #7 ;
INFO  23:12:52,107 - #17 [
INFO  23:12:52,107 - #18 ]
INFO  23:12:52,107 - #19 =
INFO  23:12:52,107 - #47 niz
INFO  23:12:52,107 - #7 ;
INFO  23:12:52,107 - #17 [
INFO  23:12:52,107 - #47 slovoa
INFO  23:12:52,107 - #15 ,
INFO  23:12:52,108 - #15 ,
INFO  23:12:52,108 - #47 slovob
INFO  23:12:52,108 - #18 ]
INFO  23:12:52,108 - #19 =
INFO  23:12:52,108 - #47 niz
INFO  23:12:52,108 - #7 ;
INFO  23:12:52,108 - #17 [
INFO  23:12:52,108 - #47 slovoa
INFO  23:12:52,108 - #15 ,
INFO  23:12:52,108 - #15 ,
INFO  23:12:52,108 - #47 slovob
INFO  23:12:52,108 - #18 ]
INFO  23:12:52,108 - #19 =
INFO  23:12:52,108 - #47 nizch
INFO  23:12:52,108 - #7 ;
INFO  23:12:52,108 - #17 [
INFO  23:12:52,108 - #47 a
INFO  23:12:52,108 - #15 ,
INFO  23:12:52,108 - #15 ,
INFO  23:12:52,108 - #47 b
INFO  23:12:52,108 - #18 ]
INFO  23:12:52,108 - #19 =
INFO  23:12:52,108 - #47 nizch
INFO  23:12:52,108 - #7 ;
INFO  23:12:52,108 - #17 [
INFO  23:12:52,108 - #15 ,
INFO  23:12:52,108 - #15 ,
INFO  23:12:52,108 - #47 a
INFO  23:12:52,109 - #15 ,
INFO  23:12:52,109 - #47 b
INFO  23:12:52,109 - #18 ]
INFO  23:12:52,109 - #19 =
INFO  23:12:52,109 - #47 niz
INFO  23:12:52,109 - #7 ;
INFO  23:12:52,109 - #17 [
INFO  23:12:52,109 - #47 niz
INFO  23:12:52,109 - #17 [
INFO  23:12:52,110 - #49 1
INFO  23:12:52,110 - #18 ]
INFO  23:12:52,110 - #15 ,
INFO  23:12:52,110 - #15 ,
INFO  23:12:52,110 - #47 a
INFO  23:12:52,110 - #15 ,
INFO  23:12:52,110 - #47 niz
INFO  23:12:52,110 - #17 [
INFO  23:12:52,110 - #49 2
INFO  23:12:52,110 - #18 ]
INFO  23:12:52,110 - #18 ]
INFO  23:12:52,110 - #19 =
INFO  23:12:52,111 - #47 niz2
INFO  23:12:52,111 - #4 }
ERROR 23:12:52,111 - 
Sintaksna greska na liniji 81
INFO  23:12:52,111 - #4 }
ERROR 23:12:52,112 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 84
