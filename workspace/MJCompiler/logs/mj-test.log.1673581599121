INFO  04:46:22,233 - Compiling source file: C:\Users\Dell\Desktop\PP1\Projekat januarski rok\Compiler\workspace\MJCompiler\test\test.mj
INFO  04:46:22,287 - #2 program
INFO  04:46:22,287 - #47 test
INFO  04:46:22,287 - #5 const
INFO  04:46:22,289 - #47 int
INFO  04:46:22,289 - #47 nula
INFO  04:46:22,290 - #19 =
INFO  04:46:22,290 - #49 0
INFO  04:46:22,290 - #7 ;
INFO  04:46:22,292 - #5 const
INFO  04:46:22,293 - #47 int
INFO  04:46:22,293 - #47 jedan
INFO  04:46:22,293 - #19 =
INFO  04:46:22,293 - #49 1
INFO  04:46:22,293 - #7 ;
INFO  04:46:22,294 - #5 const
INFO  04:46:22,294 - #47 int
INFO  04:46:22,294 - #47 pet
INFO  04:46:22,294 - #19 =
INFO  04:46:22,294 - #49 5
INFO  04:46:22,294 - #7 ;
INFO  04:46:22,294 - #5 const
INFO  04:46:22,295 - #47 bool
INFO  04:46:22,295 - #47 isok
INFO  04:46:22,295 - #19 =
INFO  04:46:22,295 - #50 true
INFO  04:46:22,295 - #15 ,
INFO  04:46:22,296 - #47 notok
INFO  04:46:22,296 - #19 =
INFO  04:46:22,296 - #50 false
INFO  04:46:22,296 - #7 ;
INFO  04:46:22,296 - #5 const
INFO  04:46:22,296 - #47 char
INFO  04:46:22,296 - #47 chara
INFO  04:46:22,297 - #19 =
INFO  04:46:22,297 - #48 a
INFO  04:46:22,297 - #7 ;
INFO  04:46:22,297 - #47 int
INFO  04:46:22,297 - #47 niz
INFO  04:46:22,297 - #17 [
INFO  04:46:22,298 - #18 ]
INFO  04:46:22,298 - #15 ,
INFO  04:46:22,299 - #47 niz2
INFO  04:46:22,300 - #17 [
INFO  04:46:22,300 - #18 ]
INFO  04:46:22,300 - #15 ,
INFO  04:46:22,300 - #47 a
INFO  04:46:22,300 - #15 ,
INFO  04:46:22,301 - #47 b
INFO  04:46:22,301 - #7 ;
INFO  04:46:22,301 - #47 int
INFO  04:46:22,301 - #47 length1
INFO  04:46:22,301 - #15 ,
INFO  04:46:22,301 - #47 length2
INFO  04:46:22,301 - #7 ;
INFO  04:46:22,301 - #47 char
INFO  04:46:22,301 - #47 nizch
INFO  04:46:22,302 - #17 [
INFO  04:46:22,302 - #18 ]
INFO  04:46:22,302 - #7 ;
INFO  04:46:22,302 - #3 {
INFO  04:46:22,302 - #47 bool
INFO  04:46:22,302 - #47 isequal
INFO  04:46:22,302 - #13 (
INFO  04:46:22,303 - #47 int
INFO  04:46:22,303 - #47 arr1
INFO  04:46:22,303 - #17 [
INFO  04:46:22,303 - #18 ]
INFO  04:46:22,303 - #15 ,
INFO  04:46:22,303 - #47 int
INFO  04:46:22,303 - #47 arr2
INFO  04:46:22,303 - #17 [
INFO  04:46:22,303 - #18 ]
INFO  04:46:22,303 - #14 )
INFO  04:46:22,304 - #47 bool
INFO  04:46:22,304 - #47 isequal
INFO  04:46:22,304 - #7 ;
INFO  04:46:22,304 - #3 {
INFO  04:46:22,305 - #33 if
INFO  04:46:22,305 - #13 (
INFO  04:46:22,306 - #47 arr1
INFO  04:46:22,306 - #20 ==
INFO  04:46:22,308 - #47 arr2
INFO  04:46:22,309 - #14 )
INFO  04:46:22,309 - #47 isequal
INFO  04:46:22,310 - #19 =
INFO  04:46:22,310 - #50 true
INFO  04:46:22,310 - #7 ;
INFO  04:46:22,310 - #34 else
INFO  04:46:22,310 - #47 isequal
INFO  04:46:22,311 - #19 =
INFO  04:46:22,311 - #50 false
INFO  04:46:22,311 - #7 ;
INFO  04:46:22,311 - #38 return
INFO  04:46:22,312 - #47 isequal
INFO  04:46:22,312 - #7 ;
INFO  04:46:22,312 - #4 }
INFO  04:46:22,312 - #6 void
INFO  04:46:22,313 - #47 printintarray
INFO  04:46:22,313 - #13 (
INFO  04:46:22,313 - #47 int
INFO  04:46:22,315 - #47 array
INFO  04:46:22,315 - #17 [
INFO  04:46:22,315 - #18 ]
INFO  04:46:22,315 - #14 )
INFO  04:46:22,315 - #47 int
INFO  04:46:22,315 - #47 arr
INFO  04:46:22,315 - #7 ;
INFO  04:46:22,315 - #3 {
INFO  04:46:22,316 - #47 array
INFO  04:46:22,316 - #16 .
INFO  04:46:22,316 - #39 foreach
INFO  04:46:22,316 - #13 (
INFO  04:46:22,316 - #47 arr
INFO  04:46:22,316 - #40 =>
INFO  04:46:22,316 - #3 {
INFO  04:46:22,316 - #9 print
INFO  04:46:22,317 - #13 (
INFO  04:46:22,317 - #47 arr
INFO  04:46:22,317 - #14 )
INFO  04:46:22,317 - #7 ;
INFO  04:46:22,317 - #4 }
INFO  04:46:22,317 - #14 )
INFO  04:46:22,318 - #7 ;
INFO  04:46:22,318 - #4 }
INFO  04:46:22,318 - #6 void
INFO  04:46:22,318 - #47 printchararray
INFO  04:46:22,318 - #13 (
INFO  04:46:22,318 - #47 char
INFO  04:46:22,318 - #47 array
INFO  04:46:22,319 - #17 [
INFO  04:46:22,319 - #18 ]
INFO  04:46:22,319 - #14 )
INFO  04:46:22,319 - #47 char
INFO  04:46:22,319 - #47 arr
INFO  04:46:22,319 - #7 ;
INFO  04:46:22,319 - #3 {
INFO  04:46:22,319 - #47 array
INFO  04:46:22,319 - #16 .
INFO  04:46:22,319 - #39 foreach
INFO  04:46:22,319 - #13 (
INFO  04:46:22,319 - #47 arr
INFO  04:46:22,319 - #40 =>
INFO  04:46:22,319 - #3 {
INFO  04:46:22,319 - #9 print
INFO  04:46:22,319 - #13 (
INFO  04:46:22,319 - #47 arr
INFO  04:46:22,319 - #15 ,
INFO  04:46:22,319 - #49 2
INFO  04:46:22,319 - #14 )
INFO  04:46:22,320 - #7 ;
INFO  04:46:22,320 - #4 }
INFO  04:46:22,320 - #14 )
INFO  04:46:22,320 - #7 ;
INFO  04:46:22,320 - #4 }
INFO  04:46:22,320 - #6 void
INFO  04:46:22,320 - #47 printmsg
INFO  04:46:22,320 - #13 (
INFO  04:46:22,320 - #47 char
INFO  04:46:22,320 - #47 msg
INFO  04:46:22,320 - #17 [
INFO  04:46:22,320 - #18 ]
INFO  04:46:22,320 - #15 ,
INFO  04:46:22,320 - #47 int
INFO  04:46:22,320 - #47 len
INFO  04:46:22,320 - #14 )
INFO  04:46:22,320 - #47 int
INFO  04:46:22,320 - #47 cnt
INFO  04:46:22,321 - #7 ;
INFO  04:46:22,321 - #3 {
INFO  04:46:22,321 - #47 cnt
INFO  04:46:22,321 - #19 =
INFO  04:46:22,321 - #49 0
INFO  04:46:22,321 - #7 ;
INFO  04:46:22,321 - #35 while
INFO  04:46:22,321 - #13 (
INFO  04:46:22,322 - #47 cnt
INFO  04:46:22,322 - #24 <
INFO  04:46:22,322 - #47 len
INFO  04:46:22,323 - #14 )
INFO  04:46:22,323 - #3 {
INFO  04:46:22,323 - #9 print
INFO  04:46:22,323 - #13 (
INFO  04:46:22,323 - #47 msg
INFO  04:46:22,323 - #17 [
INFO  04:46:22,324 - #47 cnt
INFO  04:46:22,324 - #18 ]
INFO  04:46:22,324 - #14 )
INFO  04:46:22,324 - #7 ;
INFO  04:46:22,324 - #47 cnt
INFO  04:46:22,324 - #10 ++
INFO  04:46:22,324 - #7 ;
INFO  04:46:22,325 - #4 }
INFO  04:46:22,325 - #4 }
INFO  04:46:22,325 - #6 void
INFO  04:46:22,325 - #47 main
INFO  04:46:22,325 - #13 (
INFO  04:46:22,325 - #14 )
INFO  04:46:22,325 - #47 int
INFO  04:46:22,325 - #47 bodovi
INFO  04:46:22,326 - #7 ;
INFO  04:46:22,326 - #47 int
INFO  04:46:22,326 - #47 counter
INFO  04:46:22,326 - #7 ;
INFO  04:46:22,326 - #47 int
INFO  04:46:22,326 - #47 arr
INFO  04:46:22,326 - #7 ;
INFO  04:46:22,326 - #47 char
INFO  04:46:22,326 - #47 message
INFO  04:46:22,326 - #17 [
INFO  04:46:22,326 - #18 ]
INFO  04:46:22,326 - #7 ;
INFO  04:46:22,326 - #3 {
INFO  04:46:22,326 - #8 read
INFO  04:46:22,326 - #13 (
INFO  04:46:22,326 - #47 length1
INFO  04:46:22,326 - #14 )
INFO  04:46:22,327 - #7 ;
INFO  04:46:22,327 - #8 read
INFO  04:46:22,327 - #13 (
INFO  04:46:22,327 - #47 length2
INFO  04:46:22,327 - #14 )
INFO  04:46:22,327 - #7 ;
INFO  04:46:22,327 - #47 niz
INFO  04:46:22,327 - #19 =
INFO  04:46:22,327 - #12 new
INFO  04:46:22,327 - #47 int
INFO  04:46:22,327 - #17 [
INFO  04:46:22,327 - #47 length1
INFO  04:46:22,327 - #18 ]
INFO  04:46:22,327 - #7 ;
INFO  04:46:22,327 - #47 niz2
INFO  04:46:22,327 - #19 =
INFO  04:46:22,327 - #12 new
INFO  04:46:22,327 - #47 int
INFO  04:46:22,327 - #17 [
INFO  04:46:22,327 - #47 length2
INFO  04:46:22,328 - #18 ]
INFO  04:46:22,328 - #7 ;
INFO  04:46:22,328 - #47 message
INFO  04:46:22,328 - #19 =
INFO  04:46:22,328 - #12 new
INFO  04:46:22,328 - #47 char
INFO  04:46:22,328 - #17 [
INFO  04:46:22,328 - #49 10
INFO  04:46:22,328 - #18 ]
INFO  04:46:22,328 - #7 ;
INFO  04:46:22,328 - #47 counter
INFO  04:46:22,328 - #19 =
INFO  04:46:22,328 - #49 0
INFO  04:46:22,328 - #7 ;
INFO  04:46:22,328 - #47 a
INFO  04:46:22,328 - #19 =
INFO  04:46:22,328 - #47 ord
INFO  04:46:22,328 - #13 (
INFO  04:46:22,329 - #47 chara
INFO  04:46:22,329 - #14 )
INFO  04:46:22,330 - #7 ;
INFO  04:46:22,330 - #35 while
INFO  04:46:22,330 - #13 (
INFO  04:46:22,330 - #47 counter
INFO  04:46:22,330 - #24 <
INFO  04:46:22,330 - #47 len
INFO  04:46:22,330 - #13 (
INFO  04:46:22,330 - #47 niz
INFO  04:46:22,330 - #14 )
INFO  04:46:22,330 - #14 )
INFO  04:46:22,330 - #3 {
INFO  04:46:22,330 - #47 niz
INFO  04:46:22,330 - #17 [
INFO  04:46:22,331 - #47 counter
INFO  04:46:22,331 - #18 ]
INFO  04:46:22,331 - #19 =
INFO  04:46:22,331 - #47 a
INFO  04:46:22,331 - #7 ;
INFO  04:46:22,331 - #47 a
INFO  04:46:22,331 - #10 ++
INFO  04:46:22,331 - #7 ;
INFO  04:46:22,331 - #47 counter
INFO  04:46:22,331 - #10 ++
INFO  04:46:22,331 - #7 ;
INFO  04:46:22,331 - #4 }
INFO  04:46:22,331 - #47 message
INFO  04:46:22,331 - #17 [
INFO  04:46:22,331 - #49 0
INFO  04:46:22,331 - #18 ]
INFO  04:46:22,331 - #19 =
INFO  04:46:22,331 - #48 n
INFO  04:46:22,331 - #7 ;
INFO  04:46:22,331 - #47 message
INFO  04:46:22,331 - #17 [
INFO  04:46:22,332 - #49 1
INFO  04:46:22,332 - #18 ]
INFO  04:46:22,332 - #19 =
INFO  04:46:22,332 - #48 i
INFO  04:46:22,332 - #7 ;
INFO  04:46:22,332 - #47 message
INFO  04:46:22,332 - #17 [
INFO  04:46:22,332 - #49 2
INFO  04:46:22,332 - #18 ]
INFO  04:46:22,332 - #19 =
INFO  04:46:22,332 - #48 z
INFO  04:46:22,332 - #7 ;
INFO  04:46:22,332 - #47 printmsg
INFO  04:46:22,332 - #13 (
INFO  04:46:22,332 - #47 message
INFO  04:46:22,332 - #15 ,
INFO  04:46:22,332 - #49 3
INFO  04:46:22,332 - #14 )
INFO  04:46:22,333 - #7 ;
INFO  04:46:22,333 - #9 print
INFO  04:46:22,333 - #13 (
INFO  04:46:22,333 - #29 -
INFO  04:46:22,333 - #14 )
ERROR 04:46:22,333 - 
Sintaksna greska na liniji 67
INFO  04:46:22,333 - #7 ;
INFO  04:46:22,333 - #9 print
INFO  04:46:22,333 - #13 (
INFO  04:46:22,334 - #48 >
INFO  04:46:22,334 - #14 )
INFO  04:46:22,334 - #7 ;
INFO  04:46:22,334 - #47 niz
INFO  04:46:22,334 - #16 .
INFO  04:46:22,334 - #39 foreach
INFO  04:46:22,334 - #13 (
INFO  04:46:22,334 - #47 arr
INFO  04:46:22,334 - #40 =>
INFO  04:46:22,334 - #3 {
INFO  04:46:22,334 - #9 print
INFO  04:46:22,334 - #13 (
INFO  04:46:22,334 - #47 chr
INFO  04:46:22,334 - #13 (
INFO  04:46:22,335 - #47 arr
INFO  04:46:22,335 - #14 )
INFO  04:46:22,335 - #14 )
INFO  04:46:22,335 - #7 ;
INFO  04:46:22,335 - #4 }
INFO  04:46:22,335 - #14 )
INFO  04:46:22,335 - #7 ;
INFO  04:46:22,335 - #9 print
INFO  04:46:22,335 - #13 (
INFO  04:46:22,335 - #47 eol
INFO  04:46:22,335 - #14 )
INFO  04:46:22,335 - #7 ;
INFO  04:46:22,335 - #47 b
INFO  04:46:22,335 - #19 =
INFO  04:46:22,335 - #49 100
INFO  04:46:22,335 - #7 ;
INFO  04:46:22,335 - #47 counter
INFO  04:46:22,335 - #11 --
INFO  04:46:22,335 - #7 ;
INFO  04:46:22,335 - #35 while
INFO  04:46:22,335 - #13 (
INFO  04:46:22,335 - #47 counter
INFO  04:46:22,335 - #23 >=
INFO  04:46:22,335 - #49 0
INFO  04:46:22,336 - #14 )
INFO  04:46:22,336 - #3 {
INFO  04:46:22,336 - #47 niz2
INFO  04:46:22,336 - #17 [
ERROR 04:46:22,336 - Greska kod deklaracije formalnog parametra funkcije. 
INFO  04:46:22,336 - #47 counter
INFO  04:46:22,336 - #18 ]
INFO  04:46:22,337 - #19 =
INFO  04:46:22,337 - #47 b
INFO  04:46:22,337 - #7 ;
INFO  04:46:22,337 - #47 b
INFO  04:46:22,337 - #10 ++
INFO  04:46:22,337 - #7 ;
INFO  04:46:22,337 - #47 counter
INFO  04:46:22,337 - #11 --
INFO  04:46:22,337 - #7 ;
INFO  04:46:22,337 - #4 }
INFO  04:46:22,337 - #47 message
INFO  04:46:22,337 - #17 [
ERROR 04:46:22,337 - 
Sintaksna greska na liniji 80
ERROR 04:46:22,337 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 80
