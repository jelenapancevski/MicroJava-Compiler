INFO  03:03:17,888 - Compiling source file: C:\Users\Dell\Desktop\PP1\Projekat januarski rok\Compiler\workspace\MJCompiler\test\testovi\test1.mj
INFO  03:03:17,940 - #2 program
INFO  03:03:17,941 - #47 test302
INFO  03:03:17,941 - #5 const
INFO  03:03:17,942 - #47 int
INFO  03:03:17,942 - #47 jedan
INFO  03:03:17,943 - #19 =
INFO  03:03:17,943 - #49 1
INFO  03:03:17,943 - #7 ;
INFO  03:03:17,944 - #47 int
INFO  03:03:17,944 - #47 i
INFO  03:03:17,944 - #7 ;
INFO  03:03:17,946 - #47 bool
INFO  03:03:17,946 - #47 ibool
INFO  03:03:17,946 - #7 ;
INFO  03:03:17,946 - #47 int
INFO  03:03:17,946 - #47 niz2
INFO  03:03:17,946 - #7 ;
INFO  03:03:17,946 - #47 int
INFO  03:03:17,946 - #47 niz
INFO  03:03:17,947 - #17 [
INFO  03:03:17,947 - #18 ]
INFO  03:03:17,947 - #7 ;
INFO  03:03:17,947 - #47 int
INFO  03:03:17,947 - #47 a
INFO  03:03:17,948 - #15 ,
INFO  03:03:17,948 - #47 curr
INFO  03:03:17,948 - #7 ;
INFO  03:03:17,948 - #3 {
INFO  03:03:17,948 - #47 int
INFO  03:03:17,949 - #47 sum
INFO  03:03:17,949 - #13 (
INFO  03:03:17,949 - #47 int
INFO  03:03:17,949 - #47 z
INFO  03:03:17,949 - #15 ,
INFO  03:03:17,950 - #47 int
INFO  03:03:17,950 - #47 d
INFO  03:03:17,950 - #14 )
INFO  03:03:17,950 - #3 {
INFO  03:03:17,951 - #38 return
INFO  03:03:17,951 - #47 z
INFO  03:03:17,951 - #28 +
INFO  03:03:17,952 - #47 d
INFO  03:03:17,953 - #7 ;
INFO  03:03:17,953 - #4 }
INFO  03:03:17,953 - #47 int
INFO  03:03:17,954 - #47 inkrement
INFO  03:03:17,954 - #13 (
INFO  03:03:17,954 - #47 int
INFO  03:03:17,954 - #47 a
INFO  03:03:17,954 - #15 ,
INFO  03:03:17,954 - #47 int
INFO  03:03:17,955 - #47 inc
INFO  03:03:17,955 - #14 )
INFO  03:03:17,955 - #47 int
INFO  03:03:17,955 - #47 pom
INFO  03:03:17,955 - #7 ;
INFO  03:03:17,955 - #3 {
INFO  03:03:17,955 - #33 if
INFO  03:03:17,955 - #13 (
INFO  03:03:17,955 - #47 inc
INFO  03:03:17,956 - #20 ==
INFO  03:03:17,956 - #47 jedan
INFO  03:03:17,957 - #14 )
INFO  03:03:17,958 - #47 pom
INFO  03:03:17,959 - #19 =
INFO  03:03:17,959 - #49 1
INFO  03:03:17,959 - #7 ;
INFO  03:03:17,960 - #34 else
INFO  03:03:17,960 - #33 if
INFO  03:03:17,961 - #13 (
INFO  03:03:17,961 - #47 inc
INFO  03:03:17,961 - #20 ==
INFO  03:03:17,961 - #49 2
INFO  03:03:17,961 - #14 )
INFO  03:03:17,961 - #47 pom
INFO  03:03:17,961 - #19 =
INFO  03:03:17,961 - #47 a
INFO  03:03:17,961 - #7 ;
INFO  03:03:17,962 - #38 return
INFO  03:03:17,962 - #47 sum
INFO  03:03:17,962 - #13 (
INFO  03:03:17,963 - #47 a
INFO  03:03:17,963 - #15 ,
INFO  03:03:17,964 - #47 pom
INFO  03:03:17,964 - #14 )
INFO  03:03:17,964 - #7 ;
INFO  03:03:17,965 - #4 }
INFO  03:03:17,965 - #47 bool
INFO  03:03:17,965 - #47 verify
INFO  03:03:17,965 - #13 (
INFO  03:03:17,965 - #14 )
INFO  03:03:17,966 - #3 {
INFO  03:03:17,966 - #9 print
INFO  03:03:17,966 - #13 (
INFO  03:03:17,966 - #48 v
INFO  03:03:17,966 - #14 )
INFO  03:03:17,967 - #7 ;
INFO  03:03:17,967 - #38 return
INFO  03:03:17,967 - #50 false
INFO  03:03:17,968 - #7 ;
INFO  03:03:17,969 - #4 }
INFO  03:03:17,970 - #6 void
INFO  03:03:17,970 - #47 main
INFO  03:03:17,970 - #13 (
INFO  03:03:17,970 - #14 )
INFO  03:03:17,970 - #3 {
INFO  03:03:17,970 - #47 a
INFO  03:03:17,970 - #19 =
INFO  03:03:17,970 - #49 1
INFO  03:03:17,970 - #7 ;
INFO  03:03:17,971 - #47 inkrement
INFO  03:03:17,971 - #13 (
INFO  03:03:17,971 - #47 a
INFO  03:03:17,971 - #15 ,
INFO  03:03:17,971 - #49 1
INFO  03:03:17,971 - #14 )
INFO  03:03:17,971 - #7 ;
INFO  03:03:17,971 - #9 print
INFO  03:03:17,971 - #13 (
INFO  03:03:17,971 - #47 a
INFO  03:03:17,971 - #14 )
INFO  03:03:17,971 - #7 ;
INFO  03:03:17,971 - #4 }
INFO  03:03:17,971 - #4 }
INFO  03:03:17,977 - Program(
  ProgramIdentificator(
   test302
  ) [ProgramIdentificator]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              NoDeclarations(
              ) [NoDeclarations]
              CnstDeclaration(
                ConstDecl(
                  Type(
                   int
                  ) [Type]
                  OneConstant(
                    ConstantDeclaration(
                     jedan
                      NumberConstant(
                       1
                      ) [NumberConstant]
                    ) [ConstantDeclaration]
                  ) [OneConstant]
                ) [ConstDecl]
              ) [CnstDeclaration]
            ) [Declarations]
            VariableDeclaration(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                OneVariable(
                  Variable(
                   i
                    NoArrayBrackets(
                    ) [NoArrayBrackets]
                  ) [Variable]
                ) [OneVariable]
              ) [VarDeclaration]
            ) [VariableDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               bool
              ) [Type]
              OneVariable(
                Variable(
                 ibool
                  NoArrayBrackets(
                  ) [NoArrayBrackets]
                ) [Variable]
              ) [OneVariable]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVariable(
              Variable(
               niz2
                NoArrayBrackets(
                ) [NoArrayBrackets]
              ) [Variable]
            ) [OneVariable]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVariable(
            Variable(
             niz
              HasArrayBrackets(
              ) [HasArrayBrackets]
            ) [Variable]
          ) [OneVariable]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        Variables(
          OneVariable(
            Variable(
             a
              NoArrayBrackets(
              ) [NoArrayBrackets]
            ) [Variable]
          ) [OneVariable]
          Variable(
           curr
            NoArrayBrackets(
            ) [NoArrayBrackets]
          ) [Variable]
        ) [Variables]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethods(
          ) [NoMethods]
          MethodDecl(
            ReturnMethod(
              Type(
               int
              ) [Type]
             sum
            ) [ReturnMethod]
            MethodParameters(
              FormalParameters(
                OneFormalParameter(
                  OneParameter(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArrayBrackets(
                    ) [NoArrayBrackets]
                  ) [OneParameter]
                ) [OneFormalParameter]
                OneParameter(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArrayBrackets(
                  ) [NoArrayBrackets]
                ) [OneParameter]
              ) [FormalParameters]
            ) [MethodParameters]
            NoMethodVariables(
            ) [NoMethodVariables]
            MethodStatements(
              NoMethodStatements(
              ) [NoMethodStatements]
              ReturnExpression(
                Expression(
                  Terms(
                    OneTerm(
                      Term(
                        OneFactor(
                          FactorDesignator(
                            OneDesignator(
                             z
                            ) [OneDesignator]
                          ) [FactorDesignator]
                        ) [OneFactor]
                      ) [Term]
                    ) [OneTerm]
                    Plus(
                    ) [Plus]
                    Term(
                      OneFactor(
                        FactorDesignator(
                          OneDesignator(
                           d
                          ) [OneDesignator]
                        ) [FactorDesignator]
                      ) [OneFactor]
                    ) [Term]
                  ) [Terms]
                ) [Expression]
              ) [ReturnExpression]
            ) [MethodStatements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          ReturnMethod(
            Type(
             int
            ) [Type]
           inkrement
          ) [ReturnMethod]
          MethodParameters(
            FormalParameters(
              OneFormalParameter(
                OneParameter(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArrayBrackets(
                  ) [NoArrayBrackets]
                ) [OneParameter]
              ) [OneFormalParameter]
              OneParameter(
                Type(
                 int
                ) [Type]
               inc
                NoArrayBrackets(
                ) [NoArrayBrackets]
              ) [OneParameter]
            ) [FormalParameters]
          ) [MethodParameters]
          MethodVariables(
            NoMethodVariables(
            ) [NoMethodVariables]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVariable(
                Variable(
                 pom
                  NoArrayBrackets(
                  ) [NoArrayBrackets]
                ) [Variable]
              ) [OneVariable]
            ) [VarDeclaration]
          ) [MethodVariables]
          MethodStatements(
            MethodStatements(
              NoMethodStatements(
              ) [NoMethodStatements]
              IfElseStatement(
                IfStart(
                ) [IfStart]
                Then(
                  OneCondition(
                    ConditionTerm(
                      ConditionFacts(
                        Expression(
                          OneTerm(
                            Term(
                              OneFactor(
                                FactorDesignator(
                                  OneDesignator(
                                   inc
                                  ) [OneDesignator]
                                ) [FactorDesignator]
                              ) [OneFactor]
                            ) [Term]
                          ) [OneTerm]
                        ) [Expression]
                        IsEqual(
                        ) [IsEqual]
                        Expression(
                          OneTerm(
                            Term(
                              OneFactor(
                                FactorDesignator(
                                  OneDesignator(
                                   jedan
                                  ) [OneDesignator]
                                ) [FactorDesignator]
                              ) [OneFactor]
                            ) [Term]
                          ) [OneTerm]
                        ) [Expression]
                      ) [ConditionFacts]
                    ) [ConditionTerm]
                  ) [OneCondition]
                ) [Then]
                DesignatorStmt(
                  Assignment(
                    OneDesignator(
                     pom
                    ) [OneDesignator]
                    AssignmentExpression(
                      Expression(
                        OneTerm(
                          Term(
                            OneFactor(
                              FactorNumber(
                               1
                              ) [FactorNumber]
                            ) [OneFactor]
                          ) [Term]
                        ) [OneTerm]
                      ) [Expression]
                    ) [AssignmentExpression]
                  ) [Assignment]
                ) [DesignatorStmt]
                ElseStart(
                ) [ElseStart]
                IfStatement(
                  IfStart(
                  ) [IfStart]
                  Then(
                    OneCondition(
                      ConditionTerm(
                        ConditionFacts(
                          Expression(
                            OneTerm(
                              Term(
                                OneFactor(
                                  FactorDesignator(
                                    OneDesignator(
                                     inc
                                    ) [OneDesignator]
                                  ) [FactorDesignator]
                                ) [OneFactor]
                              ) [Term]
                            ) [OneTerm]
                          ) [Expression]
                          IsEqual(
                          ) [IsEqual]
                          Expression(
                            OneTerm(
                              Term(
                                OneFactor(
                                  FactorNumber(
                                   2
                                  ) [FactorNumber]
                                ) [OneFactor]
                              ) [Term]
                            ) [OneTerm]
                          ) [Expression]
                        ) [ConditionFacts]
                      ) [ConditionTerm]
                    ) [OneCondition]
                  ) [Then]
                  DesignatorStmt(
                    Assignment(
                      OneDesignator(
                       pom
                      ) [OneDesignator]
                      AssignmentExpression(
                        Expression(
                          OneTerm(
                            Term(
                              OneFactor(
                                FactorDesignator(
                                  OneDesignator(
                                   a
                                  ) [OneDesignator]
                                ) [FactorDesignator]
                              ) [OneFactor]
                            ) [Term]
                          ) [OneTerm]
                        ) [Expression]
                      ) [AssignmentExpression]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [IfStatement]
              ) [IfElseStatement]
            ) [MethodStatements]
            ReturnExpression(
              Expression(
                OneTerm(
                  Term(
                    OneFactor(
                      FunctionCall(
                        FunctionName(
                          OneDesignator(
                           sum
                          ) [OneDesignator]
                        ) [FunctionName]
                        ActualParams(
                          ActParsList(
                            OneActParameter(
                              Parameter(
                                Expression(
                                  OneTerm(
                                    Term(
                                      OneFactor(
                                        FactorDesignator(
                                          OneDesignator(
                                           a
                                          ) [OneDesignator]
                                        ) [FactorDesignator]
                                      ) [OneFactor]
                                    ) [Term]
                                  ) [OneTerm]
                                ) [Expression]
                              ) [Parameter]
                            ) [OneActParameter]
                            Parameter(
                              Expression(
                                OneTerm(
                                  Term(
                                    OneFactor(
                                      FactorDesignator(
                                        OneDesignator(
                                         pom
                                        ) [OneDesignator]
                                      ) [FactorDesignator]
                                    ) [OneFactor]
                                  ) [Term]
                                ) [OneTerm]
                              ) [Expression]
                            ) [Parameter]
                          ) [ActParsList]
                        ) [ActualParams]
                      ) [FunctionCall]
                    ) [OneFactor]
                  ) [Term]
                ) [OneTerm]
              ) [Expression]
            ) [ReturnExpression]
          ) [MethodStatements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        ReturnMethod(
          Type(
           bool
          ) [Type]
         verify
        ) [ReturnMethod]
        NoMethodParameters(
        ) [NoMethodParameters]
        NoMethodVariables(
        ) [NoMethodVariables]
        MethodStatements(
          MethodStatements(
            NoMethodStatements(
            ) [NoMethodStatements]
            PrintStatement(
              Expression(
                OneTerm(
                  Term(
                    OneFactor(
                      FactorCharacter(
                       v
                      ) [FactorCharacter]
                    ) [OneFactor]
                  ) [Term]
                ) [OneTerm]
              ) [Expression]
              NoPrintConstant(
              ) [NoPrintConstant]
            ) [PrintStatement]
          ) [MethodStatements]
          ReturnExpression(
            Expression(
              OneTerm(
                Term(
                  OneFactor(
                    FactorBoolean(
                     false
                    ) [FactorBoolean]
                  ) [OneFactor]
                ) [Term]
              ) [OneTerm]
            ) [Expression]
          ) [ReturnExpression]
        ) [MethodStatements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      VoidMethod(
       main
      ) [VoidMethod]
      NoMethodParameters(
      ) [NoMethodParameters]
      NoMethodVariables(
      ) [NoMethodVariables]
      MethodStatements(
        MethodStatements(
          MethodStatements(
            NoMethodStatements(
            ) [NoMethodStatements]
            DesignatorStmt(
              Assignment(
                OneDesignator(
                 a
                ) [OneDesignator]
                AssignmentExpression(
                  Expression(
                    OneTerm(
                      Term(
                        OneFactor(
                          FactorNumber(
                           1
                          ) [FactorNumber]
                        ) [OneFactor]
                      ) [Term]
                    ) [OneTerm]
                  ) [Expression]
                ) [AssignmentExpression]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [MethodStatements]
          DesignatorStmt(
            FuncionCall(
              FunctionName(
                OneDesignator(
                 inkrement
                ) [OneDesignator]
              ) [FunctionName]
              ActualParams(
                ActParsList(
                  OneActParameter(
                    Parameter(
                      Expression(
                        OneTerm(
                          Term(
                            OneFactor(
                              FactorDesignator(
                                OneDesignator(
                                 a
                                ) [OneDesignator]
                              ) [FactorDesignator]
                            ) [OneFactor]
                          ) [Term]
                        ) [OneTerm]
                      ) [Expression]
                    ) [Parameter]
                  ) [OneActParameter]
                  Parameter(
                    Expression(
                      OneTerm(
                        Term(
                          OneFactor(
                            FactorNumber(
                             1
                            ) [FactorNumber]
                          ) [OneFactor]
                        ) [Term]
                      ) [OneTerm]
                    ) [Expression]
                  ) [Parameter]
                ) [ActParsList]
              ) [ActualParams]
            ) [FuncionCall]
          ) [DesignatorStmt]
        ) [MethodStatements]
        PrintStatement(
          Expression(
            OneTerm(
              Term(
                OneFactor(
                  FactorDesignator(
                    OneDesignator(
                     a
                    ) [OneDesignator]
                  ) [FactorDesignator]
                ) [OneFactor]
              ) [Term]
            ) [OneTerm]
          ) [Expression]
          NoPrintConstant(
          ) [NoPrintConstant]
        ) [PrintStatement]
      ) [MethodStatements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:03:17,978 - ===================================
INFO  03:03:17,981 - Deklarisana konstanta jedan jednaka 1 na liniji 5
INFO  03:03:17,981 - Deklarisana promenljiva i na liniji 7
INFO  03:03:17,981 - Deklarisana promenljiva ibool na liniji 8
INFO  03:03:17,981 - Deklarisana promenljiva niz2 na liniji 10
INFO  03:03:17,981 - Deklarisan niz niz na liniji 12
INFO  03:03:17,981 - Deklarisana promenljiva a na liniji 13
INFO  03:03:17,982 - Deklarisana promenljiva curr na liniji 13
INFO  03:03:17,982 - Deklarisana funkcija sum povratna vrednost je tipa int na liniji 17
INFO  03:03:17,982 - 1. argument z tipa int na liniji 17
INFO  03:03:17,982 - 2. argument d tipa int na liniji 17
INFO  03:03:17,982 - Detektovana upotreba simbola z na liniji 19: Var z: int, 0, 1 
INFO  03:03:17,982 - Detektovana upotreba simbola d na liniji 19: Var d: int, 1, 1 
INFO  03:03:17,982 - Deklarisana funkcija sum sa 2 ulazna parametra na liniji 17
INFO  03:03:17,982 - Deklarisana funkcija inkrement povratna vrednost je tipa int na liniji 23
INFO  03:03:17,982 - 1. argument a tipa int na liniji 23
INFO  03:03:17,982 - 2. argument inc tipa int na liniji 23
INFO  03:03:17,983 - Deklarisana promenljiva pom na liniji 24
INFO  03:03:17,983 - Detektovana upotreba simbola inc na liniji 26: Var inc: int, 1, 1 
INFO  03:03:17,983 - Detektovana upotreba simbola jedan na liniji 26: Con jedan: int, 1, 0 
INFO  03:03:17,983 - Detektovana upotreba simbola pom na liniji 26: Var pom: int, 2, 1 
INFO  03:03:17,983 - Detektovana upotreba simbola inc na liniji 27: Var inc: int, 1, 1 
INFO  03:03:17,983 - Detektovana upotreba simbola pom na liniji 27: Var pom: int, 2, 1 
INFO  03:03:17,983 - Detektovana upotreba simbola a na liniji 27: Var a: int, 0, 1 
INFO  03:03:17,984 - Detektovana upotreba simbola sum na liniji 29: Meth sum: int, 0, 2 
   Var z: int, 0, 1 
   Var d: int, 1, 1 

INFO  03:03:17,984 - Detektovana upotreba simbola a na liniji 29: Var a: int, 0, 1 
INFO  03:03:17,984 - Detektovana upotreba simbola pom na liniji 29: Var pom: int, 2, 1 
INFO  03:03:17,984 - Deklarisana funkcija inkrement sa 2 ulazna parametra na liniji 23
INFO  03:03:17,984 - Deklarisana funkcija verify povratna vrednost je tipa bool na liniji 32
INFO  03:03:17,984 - Deklarisana funkcija verify sa 0 ulazna parametra na liniji 32
INFO  03:03:17,984 - Deklarisana funkcija main povratna vrednost je tipa VOID na liniji 37
INFO  03:03:17,984 - Detektovana upotreba simbola a na liniji 40: Var a: int, 4, 0 
INFO  03:03:17,984 - Detektovana upotreba simbola inkrement na liniji 41: Meth inkrement: int, 0, 2 
   Var a: int, 0, 1 
   Var inc: int, 1, 1 
   Var pom: int, 2, 1 

INFO  03:03:17,984 - Detektovana upotreba simbola a na liniji 41: Var a: int, 4, 0 
INFO  03:03:17,984 - Detektovana upotreba simbola a na liniji 42: Var a: int, 4, 0 
INFO  03:03:17,984 - Deklarisana funkcija main sa 0 ulazna parametra na liniji 37
INFO  03:03:17,984 - ===================================
INFO  03:03:17,988 - Parsiranje koda je uspesno
